import express from 'express';
import { HfInference } from '@huggingface/inference';

const hf = new HfInference(process.env.HF_API_TOKEN);
const model = 'OpenAssistant/oasst-sft-4-pythia-12b-epoch-3.5';

const app = express();
const port = 7860;

app.use(express.static('public'));

app.get('/app', async (req, res) => {
  // send the beginning of the page to the browser (the rest will be generated by the model)
  res.write('<html><head></head><body>');

  const inputs = `# Task
  ${req.query.prompt}
  # Guidelines
  - Never repeat the instruction, instead directly write the final code
  - include all JS and CSS elements within the HTML output.
  - Use a color scheme consistent with the brief and theme
  - You need to use Tailwind CSS
  - All the JS code will be written directly inside the page, using <script type="text/javascript">...</script>
  - You MUST use English, not Latin! (I repeat: do NOT write lorem ipsum!)
  - No need to write code comments, so please make the code compact (short function names etc)
  - Use a central layout by wrapping everything in a \`<div class="flex flex-col items-center">\`
  # HTML output
  <html><head></head><body>`;

  for await (const output of hf.textGenerationStream({
    model,
    inputs,
    parameters: {
      max_new_tokens: 1000,
      return_full_text: false,
    },
  })) {
    // stream the result to the browser
    res.write(output.token.text);

    // also print to the console for debugging
    process.stdout.write(output.token.text);
  }

  res.end();
});

// creates an image at ./image endpointÂ¸
app.get('/image', async (req, res) => {
  const blob = await hf.textToImage({
    inputs: `${req.query.caption}`,
    model: 'stabilityai/stable-diffusion-2xw-1',
  });
  const buffer = Buffer.from(await blob.arrayBuffer());
  res.setHeader('Content-Type', blob.type);
  res.setHeader('Content-Length', buffer.length);
  res.end(buffer);
});

app.listen(port, () => {
  console.log(`Server started on http://localhost:${port}`);
});
